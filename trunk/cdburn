#! /usr/bin/perl -w

#--------------------------------------------------------------------------
# $RCSfile$
#--------------------------------------------------------------------------
# $Revision: 100 $
# $Date: 2005-08-03 00:05:49 -0400 (Wed, 03 Aug 2005) $
# $Author: dmorelli $
#
# Script to burn iso images to CD
#--------------------------------------------------------------------------

use File::Basename;
use Getopt::Std;


#--------------------------------------------------------------------------
sub displayUsage {
    my $basename = basename $0;

    print <<USAGE;
$basename - Burn a data or music CD
version 1.0.1  Dino Morelli  dmorelli\@reactorweb.net

usage:
   $basename [-d #,#,#] [-e] [-s] [-x speed] [-k] [-v] file
   $basename --help

switches:
   -d #,#,#   SCSI device, default: ATA:1,0,0
              To determine yours, use cdrecord -scanbus
   -e         Eject when finished, default: false
   -s         Simulate, don't really burn, default: false
   -x speed   Burn speed, default: 24
   -k         Check disk after burn, default: false
              This is only valid for ISO and will ignore -e
   -v         Verbose, default: false
   file       ISO or TOC file to burn
   --help     This information.
USAGE

	exit;
}  # sub displayUsage


#--------------------------------------------------------------------------
# It all starts here

# Detect if no params given or user requested help
if(@ARGV == 0 || $ARGV[0] eq "--help") { displayUsage(); }

# Parse arguments
$opt_d = "ATA:1,0,0";
$opt_e = 0;
$opt_s = 0;
$opt_x = 24;
$opt_k = 0;
$opt_v = 0;
getopts("d:esx:kv");
$file = shift;

# No file given
if(!defined $file) { displayUsage(); }

# Figure out what type of file we have and set up the commands
SWITCH:
{
	$file =~ m|.*\.iso| && do
	{
		$command = "cdrecord driveropts=burnfree -tao dev=$opt_d ";
		if(!$opt_k)
		{ $command .= ($opt_e ? "-eject " : ""); }
		$command .= ($opt_s ? "-dummy " : "");
		$command .= "speed=$opt_x ";
		$command .= ($opt_v ? "-v " : "");
		$command .= $file;
		push(@commands, $command);

		if($opt_k) {
            push(@commands, "sleep 2");
			push(@commands, "mount /mnt/cdrom");
			push(@commands, "ls -l /mnt/cdrom/");
			push(@commands, "umount /mnt/cdrom");
		}

		last SWITCH;
	};
	$file =~ m|.*\.toc| && do
	{
		if($opt_k) { print "** Note: -k switch not possible for CDDA\n"; }

		$command = "cdrdao ";
		$command .= ($opt_s ? "simulate " : "write ");
		$command .= "--device $opt_d ";
		$command .= "--speed $opt_x ";
		$command .= ($opt_e ? "--eject " : "");
		$command .= ($opt_v ? "-v 1 " : "");
		$command .= $file;
		push(@commands, $command);

		last SWITCH;
	};
}

# Perform the commands
foreach (@commands)
{
	print "$0 executing command: $_\n";
	system $_;
}
