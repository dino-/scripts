#! /usr/bin/perl -w

#--------------------------------------------------------------------------
# $RCSfile$
#--------------------------------------------------------------------------
# $Revision: 55 $
# $Date: 2004-10-08 23:30:34 -0400 (Fri, 08 Oct 2004) $
# $Author: dmorelli $
#
# Configure Perl scripts
#--------------------------------------------------------------------------

use strict;
use Getopt::Std;
use File::Find;
use Tie::File;


if (@ARGV && ($ARGV[0] eq "--help")) {
	print "$0 - configure Perl scripts\n";
   print "This script will modify other Perl scripts to configure them for your\n";
   print "system by:\n";
   print "  -Changing the \#! line to point to your Perl binary\n";
	print "\n";
	print "usage: $0 [-n] [dirs]\n";
	print "       $0 --help\n";
	print "\n";
	print "  -n      Dry-run mode, don't change anything\n";
	print "  dirs    Directories to search, defaults to .\n";
	print "  --help  This help information\n";
	exit(1);
}

my $perlPath = `which perl`;
chomp $perlPath;

our ($opt_n);
getopts('n');
@ARGV = (".") unless @ARGV;

sub modifyShBang {
	# Lots of conditions under which we don't want to modify this file...
	return if -d;  # Any directory
	return if ($File::Find::name eq $0);  # This script
	return if $File::Find::name =~ /\.\w/;  # Anything with a dotword

	# We're still here? Great, time to change things.
	my @lines;
	tie @lines, 'Tie::File', $_
		or warn "Can't open $_ for reading: $!\n";
	if ($lines[0] =~ m|(\#!\s).*/perl(\s.*)|) {
		if ($opt_n) {
			print "Should be altered: $File::Find::name\n";
		} else {
			print "Altering: $File::Find::name\n";
			$lines[0] = "$1$perlPath$2";
		}
	}
	untie @lines;
}

print "(no operation mode)\n" if $opt_n;

print "Fixing Perl script sh-bang lines...\n";
find(\&modifyShBang, @ARGV);
print "Done\n";
