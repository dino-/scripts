#! /usr/bin/perl -w

use strict;
use Cwd;
use English;
use File::Basename;


my ($newClientArchive, $instDirParent, $user, $newDirName);
my $simlinkName = "SecondLife";


# Initial variable setup.
$newClientArchive = shift;
$newClientArchive or die "Please supply the path to a SecondLife client .tar.bz2 file.\n";
$newClientArchive = Cwd::abs_path $newClientArchive;

$instDirParent = '/usr/local/share/';
($user) = getpwuid $REAL_USER_ID;
$user =~ /root/ or die "This script needs to install software into the system's $instDirParent directory. Thus, it must be run with superuser permissions.\n";

$newDirName = basename $newClientArchive, ".tar.bz2";

# Be in the installation directory.
chdir $instDirParent;

# Make a note of the old install dir.
my $oldDir = readlink "${instDirParent}${simlinkName}";

# Remove the old symlink.
print "Removing old symlink: ${instDirParent}${simlinkName}...";
unlink $simlinkName;
print "done\n";

# Unpack new client software.
print "Unpacking new client software from $newClientArchive...";
system "tar xjf $newClientArchive";
print "done\n";

# This dir often carries user/group info from some other system. Fix it.
# This owner/group is pretty normal for /usr/local/share
# Not using Perl's own chown here because of its lack of recursivity.
print "Changing new client software user/group...";
system "chown -R root:staff $newDirName";
print "done\n";

# Create the new simlink
print "Creating new symlink...";
symlink $newDirName, $simlinkName;
print "done\n";

# Inform the user installation is complete.
print "New Second Life client install complete.\n";
print "New install dir: ${instDirParent}${newDirName}\n\n";
system 'ls -ld SecondLife*';

# Inform the user they may want to remove the old version.
print "\nYou may want to remove the prior version, located here: ${instDirParent}${oldDir}\n";
