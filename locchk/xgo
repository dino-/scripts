#! /bin/sh

#--------------------------------------------------------------------------
# $HeadURL$
#--------------------------------------------------------------------------
# $Revision$
# $Date$
# $Author$
#
# Script to start XFree86 with a certain layout.
#--------------------------------------------------------------------------


vLocCheckFile=/var/tmp/locCheck
vBasename=`basename $0`

displayUsage () {
	cat <<USAGE
$vBasename - start XFree86 with a specific layout
   Program will get docking status from $vLocCheckFile

usage:
   xgo [-n] [-s] [laptop|docked]
   xgo --help

switches:
   -n      No-action mode. Don't actually start X
   -s      Suppress start-up programs
   --help  This usage information
USAGE

	exit
}


# User requested help
if [ "$1" = "--help" ]; then displayUsage; fi

echo "`date`  $vBasename started"

# Parse arguments
while getopts "ns" vOpt
do
	# If it's an unwanted switch, skip rest of loop
	if [ "$vOpt" == "?" ]
		then continue
	fi

	# Assign the value of the switch to a variable: opt_<switch>
	# Binary switches will be 1 for true and null for false
	if [ -z "$OPTARG" ]
		then eval opt_${vOpt}=1
		else eval opt_${vOpt}="$OPTARG"
	fi
done

# Shift past the args that were handled above, leaving the rest
shift $(($OPTIND - 1))

if [ "$opt_s" = "1" ]
then
   export XGOSUPPRESS=1
fi

vProfile=$1

if [ "$vProfile" = "" ]
then
	echo -n "Getting autodetected docking status...  "

    . $vLocCheckFile
    vProfile=$lcLocation
    echo $vProfile
else
	# User requested a profile

	# Compare against the known profiles we allow
    # XXX
	#vProfiles="docked laptop"
	#for vCur in $vProfiles
	for vCur in "docked laptop"
	do
		if [ "$vProfile" = "$vCur" ]; then vValid="1"; fi
	done

	if [ "$vValid" != "1" ]
	then
		echo "Invalid profile: $vProfile"
		echo ""
		displayUsage
	fi

	echo "Profile requested: $vProfile"
fi

if [ "$opt_n" == "1" ]
then
	echo "No-action mode specified. X not started."
else
	startx -- -layout $vProfile
fi
