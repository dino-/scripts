#! /bin/bash


basename=$(basename "$0")


function usage {
  cat <<USAGE
$basename - Control mbsync service and timer

usage:
  $basename [OPTIONS] COMMAND [-- ARG ARG ...]

options:
  -h, --help       This help information

commands:

  status  Status of the mbsync timer, including how long until the next run
  sync    Synchronize mail now by starting the mbsync.service
  start   Start mbsync.timer
  stop    Stop mbsync.timer
  log     Tail -f the mbsync.service log with journalctl

Additional args can be supplied after the -- switch, an example:

    $ $basename log -- --since '1 hour ago'

v1.1  2019-08-02  Dino Morelli <dino@ui3.info>

USAGE
}


# arg parsing

getoptResults=$(getopt -o h --long help -n "$basename" -- "$@") \
  || { usage; exit 1; }

# Note the quotes around "$getoptResults": they are essential!
eval set -- "$getoptResults"

optHelp=false

while true ; do
  case "$1" in
    -h|--help) optHelp=true; shift;;
    --) shift; break;;
  esac
done

$optHelp && { usage; exit 0; }

if [ $# -lt 1 ]
then
  echo "Missing COMMAND"
  usage
  exit 1
fi

command=$1
shift

case "$command" in
  status) systemctl  --user status mbsync.timer;;
  sync)   systemctl  --user start  mbsync;;        # Default is mbsync.service
  start)  systemctl  --user start  mbsync.timer;;
  stop)   systemctl  --user stop   mbsync.timer;;
  log)    journalctl --user -u mbsync -f "$@";;    # Default is mbsync.service
  *)      echo "Invalid command: $command"; exit 1;;
esac
