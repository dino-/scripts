#! /usr/bin/perl -w

#--------------------------------------------------------------------------
# $HeadURL$
#--------------------------------------------------------------------------
# $Revision: 128 $
# $Date: 2005-09-12 10:40:21 -0400 (Mon, 12 Sep 2005) $
# $Author: dmorelli $
#
# Find things in multiple jar files
#--------------------------------------------------------------------------

use strict;
use File::Basename;
use File::Find;
use Getopt::Std;


our ($opt_d);
my ($basename) = fileparse $0;
my $usage = <<USAGE;
$basename - Find things in multiple jar files

usage: $basename [-d depth] startingDir searchString
       $basename --help

options:
   -d      Depth to descend from the starting dir, default: no restriction
   --help  This help information
USAGE

# No args or user requested help
(!@ARGV || $ARGV[0] eq '--help') and die "$usage$/";

# Parse args
getopts('d:');
$opt_d ||= 0;
my ($dir, $query) = @ARGV;
(!$dir || !$query) and die "Missing args!$/$usage$/";

my $baseDepth = $dir =~ tr|/|/|;


# The work happens here, the find below calls this for every file/dir
# it finds
sub wanted {
	# Only jar files
	return unless /\.jar$/;

	# Only files at or above the specified depth
	if ($opt_d) {
		my $curDepth = $File::Find::name =~ tr|/|/|;
		return if $curDepth - $baseDepth > $opt_d;
	}

	# So the user knows that we're doing something
	print ".";

	# Search through the contents of the jar
	my $result = `jar tvf $_ | grep "$query"`;

	# Output grep's results if it was successful
	print "$/$File::Find::name$/$result" if $result;
}

find
	{
		wanted => \&wanted,
		follow => 1,  # Follow symlinks
	},
	$dir;
print "$/";
