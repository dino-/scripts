#! /usr/bin/perl -w

#--------------------------------------------------------------------------
# Script to burn iso images to CD
#--------------------------------------------------------------------------

use strict;
use File::Basename;
use Getopt::Long;


my @commands;
my $basename = basename $0;
my %opts = (
    device => '/dev/scd0',
);

#--------------------------------------------------------------------------
sub displayUsage {
    print <<USAGE;
$basename - Burn a data or music CD

usage:
   $basename [OPTIONS] FILE
   $basename --help

options:
   -e, --eject          Eject when finished
   -d, --device=DEVICE  SCSI device, default: $opts{device}
                        If you need to know more, like SCSI device numbers, 
                        drive model info, etc:
                        `wodim -scanbus`
                        `wodim dev=$opts{device} -scanbus`
   -h, --help           This information
   -k, --check          Check disk after burn
                        This is only valid for ISO and will ignore -e
   -s, --simulate       Simulate, don't really burn
   -v, --verbose        Verbose
   -x, --speed=SPEED    Burn speed, default: not specified

FILE is an ISO or TOC file to burn (.iso or .toc)

version 1.0.5  Dino Morelli  dino\@ui3.info
USAGE

	exit;
}


#--------------------------------------------------------------------------
# It all starts here

# Parse arguments
Getopt::Long::Configure ("bundling");
GetOptions(
    \%opts,
    'eject|e',
    'device|d=s',
    'help|h',
    'check|k',
    'simulate|s',
    'verbose|v',
    'speed|x=i',
) or displayUsage;

displayUsage if $opts{help};

my $file = shift;
if(!defined $file) {
    print "No file specified.\n";
    displayUsage;
}

# Figure out what type of file we have and set up the commands
SWITCH: {
	$file =~ m|.*\.iso| && do {
		my $command = 
            "wodim driveropts=burnfree -tao dev=$opts{device} ";
		if(!$opts{check})
		{ $command .= ($opts{eject} ? "-eject " : ""); }
		$command .= ($opts{simulate} ? "-dummy " : "");
		$command .= ($opts{speed} ? "speed=$opts{speed} " : "");
		$command .= ($opts{verbose} ? "-v " : "");
		$command .= $file;
		push(@commands, $command);

		if($opts{check}) {
         my $cdMountPoint = "/media/cd/";
         push(@commands, "sleep 2");
			push(@commands, "mount $cdMountPoint");
			push(@commands, "ls -l $cdMountPoint");
			push(@commands, "umount $cdMountPoint");
		}

		last SWITCH;
	};
	$file =~ m|.*\.toc| && do {
		if($opts{check}) { print "** Note: -k switch not possible for CDDA\n"; }

		my $command = "cdrdao ";
		$command .= ($opts{simulate} ? "simulate " : "write ");
		$command .= "--device $opts{device} ";
		$command .= "--speed $opts{speed} ";
		$command .= ($opts{eject} ? "--eject " : "");
		$command .= ($opts{verbose} ? "-v 1 " : "");
		$command .= $file;
		push(@commands, $command);

		last SWITCH;
	};
}

# Perform the commands
foreach (@commands) {
	print "$basename executing command: $_\n";
	system $_;
}
