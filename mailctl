#! /bin/bash


basename=$(basename "$0")


function usage {
  cat <<USAGE
$basename - Control mbsync service and timer

usage:
  $basename [OPTIONS] COMMAND

options:
  -h, --help       This help information

commands:

  status  Status of the mbsync timer, including how long until the next run
  sync    Synchronize mail now by starting the mbsync.service
  start   Start mbsync.timer
  stop    Stop mbsync.timer
  log     Display the log from the last 5 minutes

log is performing this command:

  journalctl --user -u mbsync --since "5 minutes ago"

v1.2  2019-10-02  Dino Morelli <dino@ui3.info>

USAGE
}


# arg parsing

getoptResults=$(getopt -o h --long help -n "$basename" -- "$@") \
  || { usage; exit 1; }

# Note the quotes around "$getoptResults": they are essential!
eval set -- "$getoptResults"

optHelp=false

while true ; do
  case "$1" in
    -h|--help) optHelp=true; shift;;
    --) shift; break;;
  esac
done

$optHelp && { usage; exit 0; }

if [ $# -ne 1 ]
then
  echo "COMMAND should be exactly one argument"
  usage
  exit 1
fi

command=$1
shift

case "$command" in
  status)
    set -x
    systemctl --user --no-pager status mbsync.timer
    systemctl --user --no-pager list-timers mbsync.timer;;
  sync)   set -x; systemctl  --user start  mbsync;;
  start)  set -x; systemctl  --user start  mbsync.timer;;
  stop)   set -x; systemctl  --user stop   mbsync.timer;;
  log)    set -x; journalctl --user -u mbsync --since "5 minutes ago";;
  *)      echo "Invalid command: $command"; usage; exit 1;;
esac
