#! /bin/bash

basename=$(basename "$0")


usage=$(cat <<USAGE
$basename - Set the date/time of a JPG image file

usage:
  $basename [OPTIONS] DATETIME FILE

options:
  -h, --help       This help information

This script will delete existing dates in the file in these EXIF fields:

  Exif.Photo.DateTimeOriginal
  Exif.Photo.DateTimeDigitized

And will then set the supplied datetime in:

  Exif.Image.DateTime

It will also set 'Exif.Photo.UserComment' to 'DateTime is a guess'. All other
EXIF fields are left as they were.

DATETIME must be in this format: "YYYY:MM:DD HH:MM:SS"

To see all existing EXIF fields for a JPG file: exiv2 -pa FILE

v1.1  2021-05-18  Dino Morelli <dino@ui3.info>

USAGE
)


warn () {
  echo "$basename:" "$@" >&2
}


die () {
  rc="$1"
  shift
  warn "$@"
  exit "$rc"
}


# arg parsing

getoptResults=$(getopt -o h --long help -n "$basename" -- "$@") \
  || die 1 "$usage"

# Note the quotes around "$getoptResults": they are essential!
eval set -- "$getoptResults"

optHelp=false

while true ; do
  case "$1" in
    -h|--help) optHelp=true; shift;;
    --) shift; break;;
  esac
done

$optHelp && die 0 "$usage"

if [ $# -lt 2 ]
then
  echo "Incorrect number of arguments"
  die 1 "$usage"
fi

dateTime="$1"
file="$2"

exiv2 -M"del Exif.Photo.DateTimeOriginal" -M"del Exif.Photo.DateTimeDigitized" -M"set Exif.Image.DateTime Ascii $dateTime" -M"set Exif.Photo.UserComment Comment DateTime is a guess" "$file"
