#! /bin/sh

#--------------------------------------------------------------------------
# $HeadURL: file:///var/lib/svn/scripts/xgo $
#--------------------------------------------------------------------------
# $Revision: 157 $
# $Date: 2005-09-12 15:41:03 -0400 (Mon, 12 Sep 2005) $
# $Author: dmorelli $
#
# Script to start XFree86 with a certain layout.
#--------------------------------------------------------------------------


vBasename=`basename $0`

displayUsage () {
	cat <<USAGE
$vBasename - start XFree86 with a specific layout
   Program will attempt to detect docked status

usage:
   xgo [-n] [-s] [laptop|docked]
   xgo --help

switches:
   -n      No-action mode. Don't actually start X
   -s      Suppress start-up programs
   --help  This usage information
USAGE

	exit
}


# User requested help
if [ "$1" = "--help" ]; then displayUsage; fi

echo "`date`  $vBasename started"

# Parse arguments
while getopts "ns" vOpt
do
	# If it's an unwanted switch, skip rest of loop
	if [ "$vOpt" == "?" ]
		then continue
	fi

	# Assign the value of the switch to a variable: opt_<switch>
	# Binary switches will be 1 for true and null for false
	if [ -z "$OPTARG" ]
		then eval opt_${vOpt}=1
		else eval opt_${vOpt}="$OPTARG"
	fi
done

# Shift past the args that were handled above, leaving the rest
shift $(($OPTIND - 1))

if [ "$opt_s" = "1" ]
then
   export XGOSUPPRESS=1
fi

vProfile=$1

if [ "$vProfile" = "" ]
then
	echo "Attempting to autodetect docking status..."

	vUsbDevs="/proc/bus/usb/devices"

	# This is the keyboard at home
	vDocked=`grep "Dell USB Keyboard" $vUsbDevs`
	if [ "$vDocked" = "" ]
	then
		# This is the keyboard at work at SCK
		vDocked=`grep "USBPS2" $vUsbDevs`
	fi

	if [ "$vDocked" = "" ]
	then
		vProfile="laptop"
		echo "Machine appears to be NOT docked"
	else
		vProfile="docked"
		echo "Machine appears to be docked"
	fi
else
	# User requested a profile

	# Compare against the known profiles we allow
	vProfiles="docked laptop"
	for vCur in $vProfiles
	do
		if [ "$vProfile" = "$vCur" ]; then vValid="1"; fi
	done

	if [ "$vValid" != "1" ]
	then
		echo "Invalid profile: $vProfile"
		echo ""
		displayUsage
	fi

	echo "Profile requested: $vProfile"
fi

if [ "$opt_n" == "1" ]
then
	echo "No-action mode specified. X not started."
else
	startx -- -layout $vProfile
fi
