#! /usr/bin/perl -w

#--------------------------------------------------------------------------
# $HeadURL: file:///var/lib/svn/scripts/trunk/find $
#--------------------------------------------------------------------------
# $Revision: 156 $
# $Date: 2005-09-12 14:00:39 -0400 (Mon, 12 Sep 2005) $
# $Author: dmorelli $
#
# Script to duplicate some of the functionality of the find command.
#--------------------------------------------------------------------------

use File::Find;


#--------------------------------------------------------------------------
# Extract command-line arguments and put them into variables with
# meaningful names.
#
# FIXME This is not called any longer. Maybe use it for more complex
# switches.
sub parseParams()
{
	#$dirStart = "$ARGV[0]";
	#$searchType = "$ARGV[1]";
	#$pattern = "$ARGV[2]";
	( $dirStart, $searchType, $pattern ) = @ARGV;
}  # sub parseParams

#--------------------------------------------------------------------------
# Evaluate each path returned by find() and print it out if it matches
# the pattern.
sub comparePath
{
	# Save $_, it's used by File::Find::find()
	my $old = $_;
	
	my $modifier = "";
	my $strFullPath = $File::Find::name;
	$_ = $searchType;
	SWITCH:
	{
		/^-name/ && do { $strPath = $old; last SWITCH; };
		/^-i?regex/ && do { $strPath = $strFullPath; };
		/^-iregex/ && do { $modifier = "(?i)"; last SWITCH; };
	}

	# Perform the match, print if it matches.
	$strPath =~ m/${modifier}${pattern}/ && do
	{
		print("$strFullPath\n");
		#$mode = (stat($strFullPath))[2];
		#printf "  permissions: %04o\n", $mode & 07777;
	};

	# Restore $_
	$_ = $old;
}  # comparePath


#--------------------------------------------------------------------------
# It all starts here.

( $dirStart, $searchType, $pattern ) = @ARGV;

# User asked for help or bad params.
if(@ARGV == 0 || $dirStart eq "--help" || 
	$searchType eq "" || $pattern eq "")
{
	print("usage: find dir command pattern\n");
	print("commands\n");
	print("    -name  Find only in the filename (without path)\n");
	print("   -regex  Find in the full path\n");
	print("  -iregex  Case-insensitive find in the full path\n");

	exit;
}

find(\&comparePath, $dirStart);

